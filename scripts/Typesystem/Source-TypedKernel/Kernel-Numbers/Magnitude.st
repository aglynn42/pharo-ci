'From Pharo1.4a of ''16 June 2011'' [Latest update: #14301] on 24 February 2012 at 11:35:33 pm'!Object subclass: #Magnitude	uses: TTyped	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Kernel-Numbers'!!Magnitude commentStamp: 'sd 9/4/2005 10:14' prior: 0!I'm the abstract class Magnitude that provides common protocol for objects that havethe ability to be compared along a linear dimension, such as dates or times.Subclasses of Magnitude include Date, ArithmeticValue, and Time, as well asCharacter and LookupKey.  My subclasses should implement  < aMagnitude   = aMagnitude   hashHere are some example of my protocol:     3 > 4     5 = 6     100 max: 9	7 between: 5 and: 10 !!Magnitude methodsFor: '*Kernel-Extensions-Streaming' stamp: 'EstebanAllende 2/24/2012 01:11'!(Self) putOn: (Stream)aStream	((<PositionableStream>aStream) isBinary ifTrue: [ (<{asByteArray (→ByteArray)}>(<?>self)) asByteArray ] ifFalse: [ self asString]) putOn: aStream	 ! !!Magnitude methodsFor: 'comparing' stamp: 'EstebanAllende 2/24/2012 23:32'!(Self) max: (Self)aMagnitude 	"Answer the receiver or the argument, whichever has the greater 	magnitude."	self > aMagnitude		ifTrue: [^self]		ifFalse: [^aMagnitude]! !!Magnitude methodsFor: 'comparing' stamp: 'EstebanAllende 2/24/2012 23:24'!(Self) min: (Self)aMagnitude 	"Answer the receiver or the argument, whichever has the lesser 	magnitude."	self < aMagnitude		ifTrue: [^self]		ifFalse: [^aMagnitude]! !!Magnitude methodsFor: 'comparing' stamp: 'EstebanAllende 2/24/2012 23:35'!(Self) min: (Self)aMin max: (Self)aMax 	^ (self min: aMin) max: aMax! !!Magnitude methodsFor: 'hash' stamp: 'EstebanAllende 2/24/2012 00:52'!(Integer) hash	"Hash must be redefined whenever = is redefined."	^self subclassResponsibility! !!Magnitude methodsFor: 'testing' stamp: 'EstebanAllende 2/24/2012 00:48'!(Boolean) < (Magnitude)aMagnitude 	"Answer whether the receiver is less than the argument."	^self subclassResponsibility! !!Magnitude methodsFor: 'testing' stamp: 'EstebanAllende 2/24/2012 00:48'!(Boolean) <= (Magnitude)aMagnitude 	"Answer whether the receiver is less than or equal to the argument."	^(self > aMagnitude) not! !!Magnitude methodsFor: 'testing' stamp: 'EstebanAllende 2/24/2012 00:51'!(Boolean) = (Object)aMagnitude 	"Compare the receiver with the argument and answer with true if the 	receiver is equal to the argument. Otherwise answer false."	^self subclassResponsibility! !!Magnitude methodsFor: 'testing' stamp: 'EstebanAllende 2/24/2012 00:51'!(Boolean)> (Magnitude)aMagnitude 	"Answer whether the receiver is greater than the argument."	^aMagnitude < self! !!Magnitude methodsFor: 'testing' stamp: 'EstebanAllende 2/24/2012 00:51'!(Boolean)>= (Magnitude)aMagnitude 	"Answer whether the receiver is greater than or equal to the argument."	^aMagnitude <= self! !!Magnitude methodsFor: 'testing' stamp: 'EstebanAllende 2/24/2012 00:52'!(Boolean) between: (Magnitude)min and: (Magnitude)max 	"Answer whether the receiver is less than or equal to the argument, max, 	and greater than or equal to the argument, min."	^self >= min and: [self <= max]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Magnitude class	uses: TTyped classTrait	instanceVariableNames: ''!