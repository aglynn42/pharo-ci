'From Pharo1.4 of 18 April 2012 [Latest update: #14438] on 15 September 2012 at 11:30:48 pm'!!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 7/9/2012 16:51'!definition	"Answer a String that defines the receiver."	| aStream |	aStream := (String new: 800) writeStream.	superclass == nil		ifTrue: [aStream nextPutAll: 'ProtoObject']		ifFalse: [aStream nextPutAll: superclass name].	aStream nextPutAll: self kindOfSubclass;			store: self name.	(self hasTraitComposition and: [self traitComposition notEmpty]) ifTrue: [		aStream cr; tab; nextPutAll: 'uses: ';			nextPutAll: self traitCompositionString].	(self hasParametricTypes or: [self hasOldParametricDefinitions]) ifTrue:[	aStream cr; tab; nextPutAll: 'parametricVariableNames: ';			store: self parametricVariablesString.	].	self hasOldParametricDefinitions ifTrue:[	aStream cr; tab; nextPutAll: 'oldParametricVariablesAs: ';			store: self oldParametricVariablesString.	].	aStream cr; tab; nextPutAll: 'instanceVariableNames: ';			store: self instanceVariablesString.	aStream cr; tab; nextPutAll: 'classVariableNames: ';			store: self classVariablesString.	aStream cr; tab; nextPutAll: 'poolDictionaries: ';			store: self sharedPoolsString.	aStream cr; tab; nextPutAll: 'category: ';			store: self category asString.	superclass ifNil: [ 		aStream nextPutAll: '.'; cr.		aStream nextPutAll: self name.		aStream space; nextPutAll: 'superclass: nil'. ].	^ aStream contents! !!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 6/27/2012 16:44'!hasOldParametricDefinitions	|oldpvar|	oldpvar := (TypeDictionary uniqueInstance getTypedClass: self) oldpvar.	^oldpvar notNil and: [oldpvar notEmpty] ! !!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 4/4/2012 16:28'!hasParametricTypes	^(TypeDictionary uniqueInstance getLocalParametricList: self) size > 0.! !!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 6/27/2012 16:44'!oldParametricVariablesString	|env|	OTCSupport bootstrapping ifTrue: [^''].	env := TypeDictionary uniqueInstance getTypedClass: self.	^env oldpvar.! !!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 4/4/2012 16:43'!parametricVariablesString	|paramList|	OTCSupport bootstrapping ifTrue: [^''].	paramList := TypeDictionary uniqueInstance getLocalParametricList: self.	^' ' join: (paramList collect: [:each| self printParametricVariable: each]).! !!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 4/4/2012 16:41'!printParametricVariable: paramType	^(paramType upperBound = Object asType) ifTrue: [^paramType name asString] ifFalse: ['(',paramType upperBound asString,')',paramType name]! !!Class methodsFor: '*typesystem-core' stamp: 'EstebanAllende 9/15/2012 23:30'!removeFromSystem: logged	"Forget the receiver from the Smalltalk global dictionary. Any existing 	instances will refer to an obsolete version of the receiver."		"keep the class name and category for triggering the system change message. If we wait to long, then we get obsolete information which is not what we want."	"tell class to deactivate and unload itself-- two separate events in the module system"	self unload.	self superclass ifNotNil:		["If we have no superclass there's nothing to be remembered"		self superclass addObsoleteSubclass: self].	OTCSupport bootstrapping ifFalse: [			TypeDictionary uniqueInstance removeClass: self.	].	self environment forgetClass: self logged: logged.	self obsolete.! !