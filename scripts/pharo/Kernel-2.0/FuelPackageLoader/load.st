'From Pharo1.4a of ''16 June 2011'' [Latest update: #14433] on 17 April 2012 at 11:06:16 pm'!!FLCompiledMethodCluster class methodsFor: 'analyzing' stamp: 'PavelKrivanek 4/17/2012 23:06'!clusterBucketIn: aClusterization  ^aClusterization baseLevelBucket! !FileStream stdout lf; nextPutAll: 'Loading Fuel'; lf.FileStream readOnlyFileNamed: 'Fuel.st' do: [:file | file fileInSilently ].FileStream readOnlyFileNamed: 'FuelMetalevel.st' do: [:file | file fileInSilently ].FileStream readOnlyFileNamed: 'FuelPackageLoader.st' do: [:file | file fileInSilently ].!FileStream stdout nextPutAll: (Smalltalk keys select: [:n | (Smalltalk globals at: n) isNil]) asString; lf.FileStream stdout lf; nextPutAll: 'Fuel loaded'; lf.#(TextDiffBuilder RecentMessageList CodeHolder PNGReadWriter FilePackage MCCodeTool MailSender  MailMessage PSMCPatchOperationWrapper ServerDirectory MailAddressParser JPEGReadWriter SoundService  GIFReadWriter ChangeList TTCFont FileContentsBrowser ChangeSorter TTFontReader Morph   SARInstallerZnHTTPSocketFacade ) do: [:global |  Object subclass: global  instanceVariableNames: ''  classVariableNames: ''  poolDictionaries: ''  category: 'UNDECLARED'].![ (Smalltalk globals at: #FLPackage) initializersEnabled: false.FileStream readOnlyFileNamed: 'gofer.fuel' do: [:aStream |   aStream binary.  FLPackageLoader new loadFrom: aStream contents readStream].#(InternetConfiguration NetNameResolver Socket Base64MimeConverter MIMEType UUIDGenerator URI HTTPSocket PackageInfo PackageServices FileServices SystemAnnouncer MCCacheRepository MCDirtyPackageInfo MCEmptyPackageInfo MCMethodDefinition MCMockASubclass MCMockClassA MCMockPackageInfo MCPackageManager MCVersionReader MCWorkingCopy ZnByteEncoder ZnConstants ZnMimeType ZnNetworkingUtils ZnServer ZnSingleThreadedServer) do: [:c | (Smalltalk globals at: c) initialize ].FileStream stdout lf; nextPutAll: 'Gofer loaded'; lf; lf.(Smalltalk globals at: #FLPackage) initializersEnabled: true.#(World ActiveEvent ActiveWorld ActiveHand) do: [:className |   Smalltalk globals at: className put: nil].FileStream readOnlyFileNamed: 'ring.fuel' do: [:aStream |   aStream binary.  FLPackageLoader new loadFrom: aStream contents readStream].(Smalltalk globals at: #RGFactory) initialize.FileStream stdout lf; nextPutAll: 'Ring loaded'; lf.(Smalltalk globals at: #FLPackage) initializersEnabled: false.#(World ActiveEvent ActiveWorld ActiveHand) do: [:className |   Smalltalk globals at: className put: nil].FileStream readOnlyFileNamed: 'pharo-core.fuel' do: [:aStream |   aStream binary.  FLPackageLoader new loadFrom: aStream contents readStream].FileStream stdout lf; nextPutAll: 'pharo-core loaded'; lf.SmalltalkImage current snapshot: true andQuit: true.] ifError: [:e |  | rep |  "FLSerializer serialize: thisContext toFileNamed: 'PharoDebug.fuel'."  rep := FileStream forceNewFileNamed: 'PharoDebug.log'.  rep nextPutAll: 'loadFuel.st'; cr.  rep nextPutAll: 'Error:'; cr.  rep nextPutAll: e asString; cr.  rep nextPutAll: thisContext stack size asString; cr." rep nextPutAll: ((thisContext stack copy at: 12) tempsAndValues ) asString; cr."  thisContext stack copy withIndexDo: [:stck :i |    [rep nextPutAll: i asString; space; nextPutAll: stck asString; cr] ifError: [:er | rep nextPutAll: er asString; cr].    [rep tab; nextPutAll: stck tempsAndValues asString; cr ] ifError: [rep tab; nextPutAll: 'tempsAndValues error...'; cr]].  rep close.   Smalltalk quitPrimitive.]  !