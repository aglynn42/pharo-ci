Categorizer subclass: #FuelCodeLoader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FuelCodeLoader'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FuelCodeLoader class	instanceVariableNames: ''!!FuelCodeLoader class methodsFor: 'as yet unclassified' stamp: 'PavelKrivanek 4/8/2012 11:39'!commandLineHandlerAction: aCommandLine		"Load the file specified on the command line"	| scriptName prefix |	prefix := 'file://'.		scriptName := (aCommandLine parameterAt: 1) ifNil:[''].	scriptName := scriptName convertFromSystemString.	scriptName ifNotEmpty: [		(scriptName asLowercase beginsWith: prefix)			ifTrue: [scriptName := scriptName allButFirst: prefix size].   " FileStream forceNewFileNamed: 'out-before.txt' do: [:out | out nextPutAll: Smalltalk allClassesAndTraits asString]." 		FileStream readOnlyFileNamed: scriptName do: [:aStream | aStream binary.			FLPackageLoader new loadFrom: aStream contents readStream].    "FileStream forceNewFileNamed: 'out-after.txt' do: [:out | out nextPutAll: Smalltalk allClassesAndTraits asString]. "   " (Smalltalk globals at: #Compiler) evaluate: '3+4'."    SmalltalkImage current snapshot: false andQuit: true.].		! !!FuelCodeLoader class methodsFor: 'as yet unclassified' stamp: 'PavelKrivanek 4/8/2012 11:30'!register	CommandLine 		register: [ :cl | FuelCodeLoader commandLineHandlerAction: cl] 		if: [ :cl | true ]		name: #FuelCodeLoader! !!FuelCodeLoader class methodsFor: 'as yet unclassified' stamp: 'PavelKrivanek 4/8/2012 11:30'!unregister	CommandLine removeRegistrationNamed: FuelCodeLoader asString! !